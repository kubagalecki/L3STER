function( add_mpi_test source name nprocs )
    get_filename_component( test_target ${source} NAME_WE )
    add_executable( ${test_target} ${source} )
    target_include_directories( ${test_target} PRIVATE ${CMAKE_CURRENT_BINARY_DIR} )
    target_compile_options( ${test_target} PRIVATE -fno-sanitize=all )
    target_link_options( ${test_target} PRIVATE -fno-sanitize=all )
    target_link_libraries( ${test_target} L3STER )
    set( test_env GMON_OUT_PREFIX=profile_data )
    set( test_driver mpiexec )
    if ( ${ARGC} EQUAL 4 )
        set( args ${ARGV4} )
    endif ()
    foreach ( np ${nprocs} )
        set( test_params "-n;${np};--oversubscribe;$<TARGET_FILE:${test_target}>;${args}" )
        set( test_name ${name}_np_${np} )
        set( test_dir ${CMAKE_CURRENT_BINARY_DIR}/${test_name} )
        file( MAKE_DIRECTORY ${test_dir} )
        list( APPEND L3STER_MPI_TESTS ${test_name} )
        add_test( NAME ${test_name}
                  COMMAND ${test_driver} ${test_params}
                  WORKING_DIRECTORY ${test_dir}
                  )
        set_tests_properties( ${test_name} PROPERTIES ENVIRONMENT ${test_env} )
    endforeach ()
    set( L3STER_MPI_TESTS ${L3STER_MPI_TESTS} PARENT_SCOPE )
endfunction()

add_mpi_test( "${L3STER_DIR}/tests/MpiBlockingCommunicationTest.cpp" "MPI_blocking_communication_test" "1;2;4" )
add_mpi_test( "${L3STER_DIR}/tests/MpiAsyncCommunicationTest.cpp" "MPI_async_communication_test" "1;2;4" )
add_mpi_test( "${L3STER_DIR}/tests/MeshDistributionTests.cpp" "Mesh_distribution_test" "2;4" )