<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.3.0">
  <zoom_level>8</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>528</x>
      <y>192</y>
      <w>168</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Singleton&gt;&gt;
MeshMaster
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>272</x>
      <y>192</y>
      <w>168</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Singleton&gt;&gt;
DomainOwner
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>432</x>
      <y>256</y>
      <w>112</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
</panel_attributes>
    <additional_attributes>120.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1904</x>
      <y>696</y>
      <w>176</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>ASSUMPTIONS:

-only Dirichlet BCs allowed, 
all other BCs imposed in
the weak sense
-C0 Lagrange elements
-boundary elements depend
on the domain element
they belong to
-A reference curvilinear element
is a non-curvilinear element
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>584</x>
      <y>416</y>
      <w>168</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Singleton&gt;&gt;
BoundaryDomainOwner
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>336</y>
      <w>88</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;80.0;60.0;80.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>272</x>
      <y>416</y>
      <w>168</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>Domain
--
-PhysicalID : unsigned int
--
+GetPhysicalID() ID : int
+SetPhysicalID(ID : int)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>616</x>
      <y>680</y>
      <w>224</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>BoundaryDomain
--
-boundary_list : vector&lt;BoundaryElement&gt;
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>352</x>
      <y>336</y>
      <w>40</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>664</x>
      <y>560</y>
      <w>72</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0;50.0;90.0;50.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>272</x>
      <y>632</y>
      <w>328</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>template=Type : ElementType, Order : uint
Element
{final}
--
-nodes : array&lt;uint, nelnodes&gt;
-globalNodes : vector&lt;uint&gt;
--
+Element(nodes : vector&lt;double&gt;)
+Element(nodes : array&lt;double, nelnodes&gt;)
+getNodes(order : int) : array&lt;uint, nelnodes&gt;
--
Deleted:
-Element()

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>952</x>
      <y>616</y>
      <w>120</w>
      <h>120</h>
    </coordinates>
    <panel_attributes>BoundaryElement
{final}
--
-element : ElementId
-element_side : uint
--
+getElement() : 
+getSide() : uint
--
Deleted:
-BoundaryElement()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>344</x>
      <y>560</y>
      <w>40</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>880</x>
      <y>416</y>
      <w>224</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>Node
--
-coordinates : array&lt;double, 3&gt;
--
+Node(coords : array&lt;double, 3&gt;)
+setCoordinates(coords : array&lt;double, 3&gt;)
+getCoordinates() : array&lt;double, 3&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>784</x>
      <y>192</y>
      <w>392</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Singleton&gt;&gt;
NodeOwner
--
-node_list : vector&lt; pair&lt;uint, Node&gt; &gt;
--
+addNode(code_coords, pair&lt; uint, array&lt;double, 3&gt; &gt;)
+getNodeCoords(node_numbers : vector&lt;uint&gt;) : vector&lt; array&lt;double, 3&gt; &gt;
+getNodeCoords(node_number : uint) : array&lt;double, 3&gt;
+getNodeGlobalIds(node_numbers : vector&lt;uint&gt;) : array&lt;double, 3&gt;
+getNodeGlobalIds(node_number : uint) : uint</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>688</x>
      <y>264</y>
      <w>112</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>968</x>
      <y>336</y>
      <w>40</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>248</x>
      <y>1088</y>
      <w>112</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Enumeration&gt;&gt;
ElementType
--
Quad</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>296</x>
      <y>1136</y>
      <w>24</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>832</x>
      <y>696</y>
      <w>136</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..*</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>792</x>
      <y>1224</y>
      <w>248</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>/QuadratureBase/
--
-points : vector&lt; vector&lt;double&gt; &gt;
-weights : vector&lt;double&gt;
--
/+getPoints() : const vector&lt; vector&lt;double&gt; &gt;&amp;/
/+getWeights() : const vector&lt;double&gt;&amp;/
/+GetLength() : uint/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>248</x>
      <y>160</y>
      <w>952</w>
      <h>808</h>
    </coordinates>
    <panel_attributes>Mesh</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1400</x>
      <y>0</y>
      <w>240</w>
      <h>264</h>
    </coordinates>
    <panel_attributes>ElementData_Quad
--
-alphax : double
-alphay : double
-betax : double
-betay : double
-gammax : double
-gammay : double
--
+setAlphax(in val : double) : void
+setAlphay(in val : double) : void
+setBetax(in val : double) : void
+setBetay(in val : double) : void
+setGammax(in val : double) : void
+setGammay(in val : double) : void
+getAlphax() : const double&amp;
+getAlphay() : const double&amp;
+getBetax() : const double&amp;
+getBetay() : const double&amp;
+getGammax() : const double&amp;
+getGammay() : const double&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>488</x>
      <y>1016</y>
      <w>696</w>
      <h>136</h>
    </coordinates>
    <panel_attributes>template=ELTYPE: ElementType, ELORDER : uint
&lt;&lt;Singleton&gt;&gt;
RefereneElement
--
_-element_quadratures : map&lt; uint, pair&lt; QuadratureBase*, ShapeFunction&lt;ELTYPE, uint&gt; &gt; &gt;_
_-element_boundary_quadratures : vector&lt; map&lt; uint, pair&lt; QuadratureBase*, ShapeFunction&lt;ELTYPE, uint&gt; &gt; &gt; &gt;_
--
_+getDimension : uint_
_+getNumberOfNodes(order : uint) : uint {constexpr}_
_+getQuadrature(order : uint) : const pair&lt; QuadratureBase*, ShapeFunction&lt;ELTYPE, uint&gt; &gt;&amp;_
_+getBoundaryQuadrature(order : uint, side : uint) : const pair&lt; Quadrature, ShapeFunction&lt;ELTYPE, uint&gt; &gt;_
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>208</x>
      <y>1024</y>
      <w>264</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>Cannot take advantage of the Singleton class
due to the presence of constexpr member functions
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>376</x>
      <y>1048</y>
      <w>128</w>
      <h>64</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;140.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>192</x>
      <y>1224</y>
      <w>576</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>template=ELTYPE: ElementType, ELORDER : uint
ShapeFunction
--
-points : vector&lt; vector&lt;double&gt; &gt;
-values : vector&lt;double&gt;
-derivatives : vector&lt; vector&lt;double&gt; &gt;
--
+ShapeFunction(querry_points : vector&lt; vector&lt;double&gt; &gt;, order : uint)
+ShapeFunction(querry_points : vector&lt; vector&lt;double&gt; &gt;, order : uint, only_values : bool)
+ShapeFunction(quadrature : QuadratureBase*, order : uint)
+ShapeFunction() = delete
+getPoints : const vector&lt; array&lt;double, space_dim : uint&gt; &gt;&amp;
+getValues : const vector&lt;double&gt;&amp;
+getDerivatives 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>416</x>
      <y>1144</y>
      <w>168</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;60.0;190.0;60.0;190.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>176</x>
      <y>992</y>
      <w>1024</w>
      <h>504</h>
    </coordinates>
    <panel_attributes>Reference Element</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>912</x>
      <y>1144</y>
      <w>24</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>792</x>
      <y>1376</y>
      <w>352</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>template=ELTYPE: ElementType, QORDER : uint
Quadrature
{final}
--
 -
--
+getPoints() : const vector&lt; vector&lt;double&gt; &gt;&amp;
+getWeights() : const vector&lt;double&gt;&amp;
+GetLength() : uint</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>912</x>
      <y>1312</y>
      <w>24</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>1224</x>
      <y>992</y>
      <w>904</w>
      <h>504</h>
    </coordinates>
    <panel_attributes>Design Patterns</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1240</x>
      <y>768</y>
      <w>240</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>Mapper
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>1224</x>
      <y>528</y>
      <w>272</w>
      <h>440</h>
    </coordinates>
    <panel_attributes>Mapper</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1256</x>
      <y>1048</y>
      <w>272</w>
      <h>176</h>
    </coordinates>
    <panel_attributes>template=T : class
Singleton
{final}
--
_-instance : T*_
--
_+getInstance() : T*_
--
Deleted:
-Singleton()
-Singleton(const Singleton&amp;)
-Singleton(const Singleton&amp;&amp;)
-~Singleton()
-operator=(const Singleton&amp;) : Singleton&amp;
-operator=(const Singleton&amp;&amp;) : Singleton&amp;&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>1240</x>
      <y>1024</y>
      <w>304</w>
      <h>216</h>
    </coordinates>
    <panel_attributes>Singleton Design Pattern</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1608</x>
      <y>1048</y>
      <w>344</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>template=PRODUCTBASE : Class, CREATOR : Class
Factory
{final}
--
_-type_map : MapType_
--
+register(id : string, creator : CREATOR*)
+unregister(id : string)
+getCreator(id : string) : CREATOR*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1888</x>
      <y>1120</y>
      <w>192</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>&lt;&lt;typedef&gt;&gt;
MapType : map&lt;string, CREATOR*&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1608</x>
      <y>1344</y>
      <w>392</w>
      <h>104</h>
    </coordinates>
    <panel_attributes>template=KEYTYPE : class, PRODUCT : class, PRODUCTBASE : class
Creator
{final}
--
 -
--
+Creator(key : const KEYTYPE&amp;) {explicit}
+create() : PRODUCTBASE* {const}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1824</x>
      <y>1128</y>
      <w>80</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>80.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1608</x>
      <y>1200</y>
      <w>296</w>
      <h>72</h>
    </coordinates>
    <panel_attributes>template=PRODUCTBASE : Class
CreatorBase
--
 -
--
/+create() : PRODUCTBASE* {const}/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1720</x>
      <y>1264</y>
      <w>24</w>
      <h>96</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1352</x>
      <y>1216</y>
      <w>272</w>
      <h>224</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>320.0;260.0;10.0;260.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1576</x>
      <y>1120</y>
      <w>48</w>
      <h>272</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>40.0;320.0;10.0;320.0;10.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>1568</x>
      <y>1024</y>
      <w>544</w>
      <h>456</h>
    </coordinates>
    <panel_attributes>Abstract Factory Design Pattern</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1240</x>
      <y>560</y>
      <w>240</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>MapperBase
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1560</x>
      <y>768</y>
      <w>240</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>Assembler
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>1544</x>
      <y>528</y>
      <w>272</w>
      <h>440</h>
    </coordinates>
    <panel_attributes>Assembler</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1560</x>
      <y>560</y>
      <w>240</w>
      <h>184</h>
    </coordinates>
    <panel_attributes>AssemblerBase
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>896</x>
      <y>792</y>
      <w>280</w>
      <h>152</h>
    </coordinates>
    <panel_attributes>ElementId
--
-domain_number : uint
-element_type : ElementType
-element_index : uint
--
+ElementId(dom : uint, type : ElementType, index: uint)
+getDomainNumber() : uint
+getElementType() : ElementType
+getElementIndex() : uint
--
Deleted:
-ElementId()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1000</x>
      <y>728</y>
      <w>24</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>312</x>
      <y>816</y>
      <w>200</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>Nodes are referenced wrt the local
(mesh partition) index, the global
index is available within NodeOwner
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>336</x>
      <y>776</y>
      <w>96</w>
      <h>56</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>100.0;50.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
