<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.3">
  <zoom_level>4</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>532</x>
      <y>156</y>
      <w>84</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Singleton&gt;&gt;
MeshMaster
--
--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>404</x>
      <y>156</y>
      <w>84</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Singleton&gt;&gt;
DomainOwner
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>484</x>
      <y>188</y>
      <w>56</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
</panel_attributes>
    <additional_attributes>120.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1268</x>
      <y>400</y>
      <w>88</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>ASSUMPTIONS:

-only Dirichlet BCs allowed, 
all other BCs imposed in
the weak sense
-C0 Lagrange elements
-boundary elements depend
on the domain element
they belong to
-A reference curvilinear element
is a non-curvilinear element
bg=green</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>560</x>
      <y>268</y>
      <w>84</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Singleton&gt;&gt;
BoundaryDomainOwner
--
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>568</x>
      <y>228</y>
      <w>40</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1
</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;60.0;80.0;60.0;80.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>376</x>
      <y>268</y>
      <w>168</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>Domain
--
-physical_id : unsigned int
-elements : map&lt; pair&lt;ElementType, uint&gt;, ElementVectorBase* &gt;
--
+GetPhysicalID() ID : int
+SetPhysicalID(ID : int)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>576</x>
      <y>400</y>
      <w>112</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>BoundaryDomain
--
-boundary_list : vector&lt;BoundaryElement&gt;
--</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>444</x>
      <y>228</y>
      <w>20</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>600</x>
      <y>340</y>
      <w>36</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0;50.0;90.0;50.0;150.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>404</x>
      <y>376</y>
      <w>164</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>template=Type : ElementType, Order : uint
Element
{final}
--
-nodes : array&lt;uint, nelnodes&gt;
-globalNodes : vector&lt;uint&gt;
--
+Element(nodes : vector&lt;double&gt;)
+Element(nodes : array&lt;double, nelnodes&gt;)
+getNodes(order : int) : array&lt;uint, nelnodes&gt;
--
Deleted:
-Element()

</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>744</x>
      <y>368</y>
      <w>60</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>BoundaryElement
{final}
--
-element : ElementId
-element_side : uint
--
+getElement() : 
+getSide() : uint
--
Deleted:
-BoundaryElement()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>340</y>
      <w>20</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>708</x>
      <y>268</y>
      <w>112</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>Node
--
-coordinates : array&lt;double, 3&gt;
--
+Node(coords : array&lt;double, 3&gt;)
+setCoordinates(coords : array&lt;double, 3&gt;)
+getCoordinates() : array&lt;double, 3&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>660</x>
      <y>156</y>
      <w>196</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Singleton&gt;&gt;
NodeOwner
--
-node_list : vector&lt; pair&lt;uint, Node&gt; &gt;
--
+addNode(code_coords, pair&lt; uint, array&lt;double, 3&gt; &gt;)
+getNodeCoords(node_numbers : vector&lt;uint&gt;) : vector&lt; array&lt;double, 3&gt; &gt;
+getNodeCoords(node_number : uint) : array&lt;double, 3&gt;
+getNodeGlobalIds(node_numbers : vector&lt;uint&gt;) : array&lt;double, 3&gt;
+getNodeGlobalIds(node_number : uint) : uint</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>612</x>
      <y>192</y>
      <w>56</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;120.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>752</x>
      <y>228</y>
      <w>20</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..*</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>440</x>
      <y>596</y>
      <w>56</w>
      <h>28</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Enumeration&gt;&gt;
ElementType
--
Quad</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>464</x>
      <y>620</y>
      <w>12</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>684</x>
      <y>408</y>
      <w>68</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..*</panel_attributes>
    <additional_attributes>10.0;10.0;150.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>712</x>
      <y>664</y>
      <w>124</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>/QuadratureBase/
--
-points : vector&lt; vector&lt;double&gt; &gt;
-weights : vector&lt;double&gt;
--
/+getPoints() : const vector&lt; vector&lt;double&gt; &gt;&amp;/
/+getWeights() : const vector&lt;double&gt;&amp;/
/+GetLength() : uint/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>212</x>
      <y>144</y>
      <w>712</w>
      <h>664</h>
    </coordinates>
    <panel_attributes>Mesh</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1016</x>
      <y>52</y>
      <w>120</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>ElementData_Quad
--
-alphax : double
-alphay : double
-betax : double
-betay : double
-gammax : double
-gammay : double
--
+setAlphax(in val : double) : void
+setAlphay(in val : double) : void
+setBetax(in val : double) : void
+setBetay(in val : double) : void
+setGammax(in val : double) : void
+setGammay(in val : double) : void
+getAlphax() : const double&amp;
+getAlphay() : const double&amp;
+getBetax() : const double&amp;
+getBetay() : const double&amp;
+getGammax() : const double&amp;
+getGammay() : const double&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>560</x>
      <y>560</y>
      <w>348</w>
      <h>68</h>
    </coordinates>
    <panel_attributes>template=ELTYPE: ElementType, ELORDER : uint
&lt;&lt;Singleton&gt;&gt;
RefereneElement
--
_-element_quadratures : map&lt; uint, pair&lt; QuadratureBase*, ShapeFunction&lt;ELTYPE, uint&gt; &gt; &gt;_
_-element_boundary_quadratures : vector&lt; map&lt; uint, pair&lt; QuadratureBase*, ShapeFunction&lt;ELTYPE, uint&gt; &gt; &gt; &gt;_
--
_+getDimension : uint_
_+getNumberOfNodes(order : uint) : uint {constexpr}_
_+getQuadrature(order : uint) : const pair&lt; QuadratureBase*, ShapeFunction&lt;ELTYPE, uint&gt; &gt;&amp;_
_+getBoundaryQuadrature(order : uint, side : uint) : const pair&lt; Quadrature, ShapeFunction&lt;ELTYPE, uint&gt; &gt;_
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>420</x>
      <y>564</y>
      <w>132</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>Cannot take advantage of the Singleton class
due to the presence of constexpr member functions
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>504</x>
      <y>576</y>
      <w>64</w>
      <h>32</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>10.0;10.0;140.0;60.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>412</x>
      <y>664</y>
      <w>288</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>template=ELTYPE: ElementType, ELORDER : uint
ShapeFunction
--
-points : vector&lt; vector&lt;double&gt; &gt;
-values : vector&lt;double&gt;
-derivatives : vector&lt; vector&lt;double&gt; &gt;
--
+ShapeFunction(querry_points : vector&lt; vector&lt;double&gt; &gt;, order : uint)
+ShapeFunction(querry_points : vector&lt; vector&lt;double&gt; &gt;, order : uint, only_values : bool)
+ShapeFunction(quadrature : QuadratureBase*, order : uint)
+ShapeFunction() = delete
+getPoints : const vector&lt; array&lt;double, space_dim : uint&gt; &gt;&amp;
+getValues : const vector&lt;double&gt;&amp;
+getDerivatives 
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>524</x>
      <y>624</y>
      <w>84</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>lt=.&gt;</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;60.0;190.0;60.0;190.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>404</x>
      <y>548</y>
      <w>512</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>Reference Element</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>772</x>
      <y>624</y>
      <w>12</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>712</x>
      <y>740</y>
      <w>176</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>template=ELTYPE: ElementType, QORDER : uint
Quadrature
{final}
--
 -
--
+getPoints() : const vector&lt; vector&lt;double&gt; &gt;&amp;
+getWeights() : const vector&lt;double&gt;&amp;
+GetLength() : uint</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>772</x>
      <y>708</y>
      <w>12</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>928</x>
      <y>548</y>
      <w>240</w>
      <h>236</h>
    </coordinates>
    <panel_attributes>Design Patterns</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>936</x>
      <y>436</y>
      <w>120</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>Mapper
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>928</x>
      <y>316</y>
      <w>136</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>Mapper</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>952</x>
      <y>572</y>
      <w>180</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>template=KeyType : Class, CreatorBase : Class
Factory
{final, static}
--
_-creator_map : map_t_
--
+register(key : KeyType, creator : CreatorBase*)
+unregister(key : KeyType)
+getCreator(key : KeyType) : CreatorBase*
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>952</x>
      <y>716</y>
      <w>196</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>template=KeyType : class, BaseT : class, T : class
Creator
{final}
--
 -
--
+Creator(key : const KeyType&amp;)
+create() : BaseT*</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>952</x>
      <y>648</y>
      <w>148</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>template=BaseT : Class
CreatorBase
--
 -
--
/+create() : BaseT*/</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1008</x>
      <y>680</y>
      <w>12</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;100.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>936</x>
      <y>608</y>
      <w>24</w>
      <h>132</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>40.0;310.0;10.0;310.0;10.0;10.0;40.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>936</x>
      <y>564</y>
      <w>224</w>
      <h>212</h>
    </coordinates>
    <panel_attributes>Abstract Factory Design Pattern</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>936</x>
      <y>332</y>
      <w>120</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>MapperBase
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1096</x>
      <y>436</y>
      <w>120</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>Assembler
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLFrame</id>
    <coordinates>
      <x>1088</x>
      <y>316</y>
      <w>136</w>
      <h>220</h>
    </coordinates>
    <panel_attributes>Assembler</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1096</x>
      <y>332</y>
      <w>120</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>AssemblerBase
--

--
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>716</x>
      <y>456</y>
      <w>140</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>ElementId
--
-domain_number : uint
-element_type : ElementType
-element_index : uint
--
+ElementId(dom : uint, type : ElementType, index: uint)
+getDomainNumber() : uint
+getElementType() : ElementType
+getElementIndex() : uint
--
Deleted:
-ElementId()</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>768</x>
      <y>424</y>
      <w>12</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>424</x>
      <y>468</y>
      <w>100</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>Nodes are referenced wrt the local
(mesh partition) index, the global
index is available within NodeOwner
bg=light_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>436</x>
      <y>448</y>
      <w>48</w>
      <h>28</h>
    </coordinates>
    <panel_attributes/>
    <additional_attributes>100.0;50.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>1268</x>
      <y>292</y>
      <w>88</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>Diagram notes:
-Additional specifiers, e.g. explicit,
const are ommited

-All raw pointers in the diagram
are actually std::unique_ptr in the
code

bg=dark_gray</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>256</x>
      <y>360</y>
      <w>136</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>template=ELTYPE : ElementTypes, ELORDER : uint
ElementVector
--
-element_vector : vec_t
--
+getConstRef() : const vec_t&amp;
+getRef() : vec_t&amp;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>256</x>
      <y>304</y>
      <w>80</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>ElementVectorBase
{static}</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>292</x>
      <y>316</y>
      <w>12</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;110.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>332</x>
      <y>308</y>
      <w>52</w>
      <h>16</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1..*</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
</diagram>
